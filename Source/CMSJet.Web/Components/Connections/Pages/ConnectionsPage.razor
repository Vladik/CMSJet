@page "/connections"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject IConnectionService ConnectionService

@using CMSJet.Core.Data.Services
@using CMSJet.Core.Models

<PageTitle>Connections</PageTitle>

<RadzenStack>
    <RadzenRow>
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Normal" JustifyContent="JustifyContent.Start" Gap="4">
                <RadzenIcon Icon="electrical_services"></RadzenIcon>
                <RadzenText Text="Connections" TextStyle="TextStyle.H5" TagName="TagName.H1" class="rz-m-0"/>
            </RadzenStack>
        </RadzenColumn>
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">
                <RadzenProgressBarCircular Visible="@_isLoading" ProgressBarStyle="ProgressBarStyle.Primary" Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Size="ProgressBarCircularSize.ExtraSmall"/>
                <RadzenButton Icon="add" Text="Add" Click="@(() => NavigateToAsync(Guid.Empty))" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Disabled="@_isLoading"/>
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
    
    <RadzenRow>
        <RadzenColumn Size="12">
            <RadzenDataList @ref="_dataList" Data="@_connections" TItem="Connection" AllowPaging="true" PageSize="25" PagerHorizontalAlign="HorizontalAlign.Justify" ShowPagingSummary="false" WrapItems="true">
                <Template Context="connection">
                    <RadzenCard Variant="Variant.Filled" class="w-100 rz-shadow-0" Style="margin: 0px 0px 10px 0px;">
                        <RadzenRow>
                            <RadzenColumn Size="12" SizeMD="12">
                                <RadzenLink Path="@($"/connections/{connection.Id}")">
                                    <RadzenText TextStyle="TextStyle.Subtitle1" TagName="TagName.H2" class="rz-color-secondary">@(connection.Name)</RadzenText>
                                </RadzenLink>
                                <RadzenText TextStyle="TextStyle.Body2">@(connection.Description)</RadzenText>
                            </RadzenColumn>
                        </RadzenRow>
                    </RadzenCard>
                </Template>
            </RadzenDataList>
        </RadzenColumn>
    </RadzenRow>
</RadzenStack>


@code {
    private bool _isLoading = true;
    
    private RadzenDataList<Connection> _dataList = null!;
    private IEnumerable<Connection> _connections = null!;

    protected override async Task OnInitializedAsync()
    {
        await LoadConnectionAsync();
    }

    private async Task LoadConnectionAsync()
    {
        await SetLoadingIndicatorAsync(true);

        try
        {
            _connections = (await ConnectionService.GetAllConnectionsByUserIdAsync(
                    Guid.Parse("56d287d3-3d95-44b5-ad9c-f0d84b6f59eb"))).OrderBy(c => c.Name);
        }
        catch (Exception ex)
        {
            await Console.Error.WriteLineAsync($"Error loading connections: {ex.Message}");
        }
        finally
        {
            await SetLoadingIndicatorAsync(false);
        }
    }

    private async Task NavigateToAsync(Guid? id = null)
    {
        NavigationManager.NavigateTo($"/connections/{id ?? Guid.Empty}");
        await Task.CompletedTask;
    }

    private async Task SetLoadingIndicatorAsync(bool isLoading)
    {
        _isLoading = isLoading;
        StateHasChanged();
        if (isLoading)
            await Task.Delay(100);
    }
}